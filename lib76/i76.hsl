#pragma byteorder(little_endian)

typedef unsigned __int32 uint32_t;
typedef unsigned __int16 uint16_t;

struct SOBJ
{
    char tag[4];
    uint32_t tag_len;
    char label[8];
    float fv[12];
    char position_root[8];
    char unk[36];
};

struct VDFC
{
    char tag[4];
    uint32_t tag_len;
    char name[20];
    uint32_t vehicle_type;
    uint32_t vehicle_size;
    float lod_distances[5];
    float mass;
    float collision_multiplier;
    float drag_coefficient;
    uint32_t unk;
};

struct Vec3
{
    float x;
    float y;
    float z;
};

struct RotationAxis
{
    struct Vec3 right;
    struct Vec3 up;
    struct Vec3 forward;
};

struct VLOC
{
    char tag[4];
    uint32_t tag_len;
    uint32_t index;
    struct RotationAxis rotation;
    struct Vec3 position;
};

struct VGEO_Part {
    char name[8];
    struct RotationAxis rotation;
    struct Vec3 position;
    char relative_to[8];
    struct Vec3 v_unk1;
    struct Vec3 bbox_size;
    float u1;
    uint32_t flag;
    uint32_t u3;
};

struct VGEO
{
    char tag[4];
    uint32_t tag_len;
    uint32_t num_parts;
    struct VGEO_Part third_person_parts[4][4][num_parts];
    struct VGEO_Part first_person_parts[4][num_parts];
    struct VGEO_Part other_parts[2][4][num_parts];
};


struct SGEO_Part {
    char name[8];
    struct RotationAxis rotation;
    struct Vec3 position;
    char relative_to[8];
    struct Vec3 v_unk1;
    struct Vec3 bbox_size;
    float u1;
    uint32_t flag;
    uint32_t u3;
    uint32_t u4;
    struct Vec3 v_unk2;
    float u5;
};

// Structure geometry
struct SGEO {
    char tag[4];
    uint32_t tag_len;
    uint32_t num_parts;
    struct LodLevel {
        struct SGEO_Part lod_parts[num_parts];
        struct SGEO_Part destroyed_parts[num_parts];
    } lod_levels[3]; // See SDFC tag for description of lod levels. There may be more than 3 but this is what we know for now.
};

// Structure defininition
struct SDFC {
    char tag[4];
    uint32_t tag_len;
    char name[16];
    uint32_t unk;
    float lods[5]; // There are presumably 5 lod levels, but only 3 are used (last 2 are set to float32.MAX)
    uint32_t health;
    char xdf_name[13];
    char death_sound_name[13]; // The sound the entity makes when killed (exploding sound etc.)
};

// Structure Collision Hull (K?)
struct SCHK {
    char tag[4];
    uint32_t tag_len;
    char target_part[8]; // Which part do we consider for this hull check
    uint32_t num_parts;
    struct SGEO_Part parts[num_parts];
};


struct VTFC {
    char tag[4];
    uint32_t tag_len;
    char vdf_file[13];
    char paint_job_name[16];
    char parts[(tag_len - 37) / 13][13];
};


struct TMT {
	char unk[64];
    struct LOD {
        struct DamageState {
            char vqm_filename[8];
        } damage_state[4];
    } lod[3];
};

// Mission files

struct WREV {
    char tag[4];
    uint32_t tag_len;
    uint32_t revision;
};

struct SurfaceParams {
    float friction;
    float rolling_resistance;
    float roughness;
    uint32_t visual_quality;
    uint32_t ddr_per_sec;
};

struct WRLD {
    char tag[4];
    uint32_t tag_len; // if msn-file. If I76-file then this does not exist
    uint32_t cd_track;
    char intro_smk_filename[13];
    char outro_smk_filename[13];
    char act_filename[13];
    char lum_filename[13];
    char tbl_filename[13];
    char npt_filename[13];
    char sky_texture_filename[13];
    char scrounge_sdf_filename[13];
    char surface_texture_filename[13];
    char level_map_filename[13]; // The geographical map of the level
    uint32_t time_of_day;
    struct SurfaceParams surface_param_dirt;
    struct SurfaceParams surface_param_light_veg;
    struct SurfaceParams surface_param_paved_road;
    struct SurfaceParams surface_param_packed_dirt;
    struct SurfaceParams surface_param_wash_road;
    struct SurfaceParams surface_param_rocky;
    struct SurfaceParams surface_param_unk1;
    struct SurfaceParams surface_param_unk2;
    uint32_t far_clip_dist;
    char description[16];
};



struct RSEG {
    char tag[4];
    uint32_t tag_len;
    uint32_t segment_type;
    uint32_t segment_piece_count;
    struct RoadSegmentPiece {
        struct Vec3 left;
        struct Vec3 right;
    } pieces[segment_piece_count];
};


struct ODEF_OBJ {
    char tag[4];
    uint32_t tag_len;
    char label[8];
    struct RotationAxis rotation;
    struct Vec3 position;
    char unk[36];
    uint32_t class_id;
    uint16_t flags;
    uint16_t team_id;
};

struct LDEF_OBJ {
    char tag[4];
    uint32_t tag_len;
    char label[8];
    uint32_t class_id;
    uint32_t unk;
    uint32_t num_strings;
    struct Vec3 string_positions[num_strings];
};

struct TMT_File
{
    uint32_t unk1;
    uint32_t unk2;
    uint32_t unk3;
    uint32_t unk4;
    uint32_t unk5;
    uint32_t mode;
    uint32_t num_parts_or_num_groups;
    uint32_t num_parts_if_mode_2;
    uint32_t unk6;
    uint32_t unk7;
    float f_unk1;
    uint32_t unk8;
    uint32_t unk9;
    uint32_t unk10;
    uint32_t unk11;
    uint32_t unk12;
    char filename[8][num_parts_or_num_groups];
};
